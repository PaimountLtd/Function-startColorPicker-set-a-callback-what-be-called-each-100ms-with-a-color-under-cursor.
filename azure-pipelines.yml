trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*'

variables:
  WinGenerator: Visual Studio 16 2019
  WinType: x64
  RuntimeURL: https://atom.io/download/atom-shell
  RuntimeName: iojs
  RuntimeVersion: v6.1.11

jobs:
- job: 'Windows64'
  pool:
    vmImage: 'windows-2019'
  workspace:
    clean: all

  steps:
  - powershell: git config --global core.autocrlf false
    displayName: 'Set Unix checkout for git'

  - checkout: self
    fetchDepth: 10

  - powershell: 'Write-Host "##vso[task.setvariable variable=tagartifact]color-picker-$((git.exe describe --tags --abbrev=0) | Out-String)"'
    displayName: 'Get tag for artifact'

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '10.x'

  - script: 'yarn install'
    displayName: 'Install dependencies'

  - script: 'node ci/bump-version.js'
    displayName: 'Bump version number'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: './ci/win-build.cmd'
    displayName: 'Build color-picker'

  - powershell: .\ci\run-sentry-cli-azure.ps1
    env:
      RootDirectory: $(Build.SourcesDirectory)
      PDBPath: $(Build.SourcesDirectory)\build\distribute\color-picker
      SENTRY_AUTH_TOKEN: $(sentryAuth)
    errorActionPreference: silentlyContinue
    ignoreLASTEXITCODE: true
    displayName: 'Prepare pdbs to Sentry'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - task: ArchiveFiles@2
    displayName: 'Generate artifact'
    inputs:
      rootFolderOrFile: build\distribute\
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-win64.tar.gz'

  - task: CopyFiles@2
    displayName: "Copy artifact to staging directory"
    inputs:
      sourceFolder: $(Build.SourcesDirectory)
      contents: '*.tar.gz'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish pipeline artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifactName: win64

  - task: DeleteFiles@1
    inputs:
      SourceFolder: build\distribute\color-picker
      Contents: '*.pdb'

  - task: ArchiveFiles@2
    displayName: 'Generate artifact'
    inputs:
      rootFolderOrFile: build\distribute\
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-win64.tar.gz'
      replaceExistingArchive: true

  - task: S3Upload@1
    inputs:
      awsCredentials: 'SLOBS_BE_AWS'
      regionName: 'us-west-2'
      bucketName: 'obs-studio-deployment'
      globExpressions: '$(tagartifact)-win64.tar.gz'
      filesAcl: 'public-read'
    displayName: 'Upload artifact to S3'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))
